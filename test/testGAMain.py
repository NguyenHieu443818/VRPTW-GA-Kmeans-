from algorithm.GeneticAlgorithm import GA
from algorithm.kmeans import Kmeans
import numpy as np
from ultility.readDataFile import load_csv_dataset
from ultility.utilities import round_float,write_excel_file


if __name__ == "__main__":
    import time
    _start_time = time.time()
    n_cluster = 6
    epsilon = 1e-5
    MAX_ITER = 1000
    # #Khởi tạo dữ liệu
    data,customers = load_csv_dataset(url="data/csv/R1/",name_of_id="R101.csv",number_of_customer=100)

    # #chạy kmeans
    # kmeans = Kmeans(epsilon=epsilon, maxiter=MAX_ITER)
    # data_kmeans = np.delete(data,0,0)
    # U1, V1, step = kmeans.k_means(data_kmeans, n_cluster)

    # cluster = [np.argwhere([U1==i]).T[1,] for i in range(n_cluster]
    # customer = [customers[list(cluster[1])[i]]for i in range(len(cluster[1])]



    # print('customer',customer)
    # n = int(input("Nhập id1 "))
    # x = int(input("Nhập id2 "))

    # customer = customers[n]
    # print(np.linalg.norm(customers[n].xy_coord-customers[x].xy_coord))

    
    # for i in range(len(cluster)):
    #     #chạy GA
    #     GA = GeneticAlgorithm(individual=10)
    #     population = GA.initialPopulation(cluster[i])
    #     print(GA.individualToRoute(population[1, customers,warehouse))
    #     for j in range(GA.__generation):
            
    #         pass
    #     bestIndividual = None
    GA = GA(individual=10,M=0,customers=customers)
    # GA.initialPopulation(cluster[1])
    # print('cluster[1] ',cluster[1])
    # print('population[1] ',population[1])
    # print(GA.individualToRoute(population[1, customers))
    # print(GA.individualToRoute([2, 21, 73, 41, 56, 4, 52, 6, customers))
    
    test = [2, 21, 73, 41, 56, 4, 5, 83, 61, 85, 37, 93, 14, 44, 38, 43, 13, 27, 69, 76, 79, 3 ,54, 24, 80, 28 ,12, 40, 53, 26, 30, 51, 9, 66, 1, 31, 88, 7 ,10, 33, 29, 78, 34, 35, 77, 36, 47, 19, 8 ,46, 17, 39, 23, 67, 55, 25, 45, 82, 18, 84, 60, 89, 52, 6, 59, 99, 94, 96, 62, 11, 90, 20, 32 ,70, 63, 64, 49, 48, 65, 71, 81, 50, 68, 72, 75, 22, 74, 58, 92, 42, 15 ,87, 57, 97, 95 ,98 ,16, 86, 91, 100]
    
    # test_route = [[2, 21, 73, 41, 56, 4,5, 83, 61, 85, 37, 93, 14, 44, 38, 43, 13, 27, 69, 76, 79, 3 ,54, 24, 80, 28 ,12, 40, 53, 26, 30, 51, 9, 66, 1,31, 88, 7 ,10, 33, 29, 78, 34, 35, 77, 36, 47, 19, 8 ,46, 17, 39, 23, 67, 55, 25, 45, 82, 18, 84, 60, 89,52, 6, 59, 99, 94, 96, 62, 11, 90, 20, 32 ,70, 63, 64, 49, 48, [65, 71, 81, 50, 68, [72, 75, 22, 74, 58, 92, 42, 15 ,87, 57, 97, [95 ,98 ,16, 86, 91, 100]]
    # test_route2 = [[2, 21, 73, 41, 56, 4, [5, 83, 61, 85, 37, 93, [14, 44, 38, 43, 13, 27, [69, 76, 79, 3, 54, 24, 80, 28, [12, 40, 53, 26, 30, 51, [9, 66, 1, 31, 88, [7, 10, 33, 29, [78, 34, 35, 77, [36, 47, 19, 8, 46, 17, [39, 23, 67, 55, 25, [45, 82, 18, 84, 60, 89, 52, [6, 59, 99, 94, 96, [62, 11, 90, 20, 32, 70, [63, 64, 49, 48, [65, 71, 81, 50, 68, 72, [75, 22, 74, 58, [92, 42, 15, 87, 57, 97, 95, 98, 16, [86, 91, 100]]

    # test3 = [ 92, 21, 73, 41, 56, 4, 5, 83, 61, 85, 37, 93, 14, 44, 38, 43, 13, 27, 69, 76, 79, 3 ,54, 24, 80, 28 ,12, 40, 53, 26, 30, 51, 9, 66, 1, 31, 88, 7 ,10, 33, 29, 78, 34, 35, 77, 36, 47, 19, 8 ,46, 17, 39, 23, 67, 55, 25, 45, 82, 18, 84, 60, 89, 52, 6, 59, 99, 94, 96, 62, 11, 90, 20, 32 ,70]
    # test4 = [[2, 21, 73, 41, 56, 4,5, 83, 61, 85, 37, 93]]

    # # print(GA.individualToRoute(test, customers))
    # # GA.cal_fitness(customers)
    # # GA.selection()
    # # GA.hybird()
    # # print(GA.individualToRoute([5, 45, 2, 7, 6, 8, 3, 1, 70, 100,14,47, customers))
    # test2 = [16, 84, 99, 14, 82, 90, 87, 5, 89, 6, 18, 64, 10, 61, 60, 49, 92, 63, 36, 57, 43, 95, 47, 100, 37, 98, 94, 59, 85, 17, 13, 31, 83, 7, 11, 2, 42, 45, 15, 48, 88, 93, 8, 44, 97, 46, 96, 38, 52, 91, 62, 86, 19]
    # # print(GA.cal_fitness([{'customerList':test2,'fitness':0,'distance':0},customers))
    # # test2 = [[16, 84, 99, 14, 82, [90, 87, 5, 89, [6, 18, 64, [10, 61, 60, [49, 92, [63, 36, 57, 43, 95, [47, 100, 37, [98, 94, 59, 85, 17, 13, [31, 83, 7, 11, 2, [42, 45, 15, 48, [88, 93, [8, 44, 97, [46, 96, [38, 52, 91, [62, 86, 19]]
    # # print(GA.individualToRoute(test))
    # _start_time = time.time()
    # print(GA.cal_fitness_individual(test))
    # print("Thời gian v1:", round_float(time.time() - _start_time))
    # print('test')
    # # print(sum(GA.cal_fitness_sub_route(test_route)))
    # # print(sum(GA.cal_fitness_sub_route(test_route2)))
    # # print('test')
    # _start_time = time.time()
    # print(GA.cal_fitness_individualV2(test))
    # print("Thời gian v2:", round_float(time.time() - _start_time))
    
    # a = [[81, 33, 79, 3, 77, 76, [75, 74, 22, 41, [98, 37, 97, 92, 59, 99, 96, [6, 94, 95, 13, 58, [49, 36, 47, 48, 82, [5, 84, 17, 45, 60, [42, 87, 57, 15, 43, 14, 44, [67, 23, 56, 39, 55, 25, [61, 16, 91, 85, 93, [9, 51, 20, 30, 70, [28, 26, 12, 80, 68, [27, 89, 52, [38, 86, 100, [63, 90, 32, 10, 31, 88, [69, 1, 50, [18, 83, 8, 46, 19, 11, [29, 24, 54, 4, [65, 71, 35, 34, 78, [64, 66, 7, 62, [0, 53, 40, 21, 73, 72, 2]]
    # b = [81, 33, 79, 3, 77, 76,75, 74, 22, 41,98, 37, 97, 92, 59, 99, 96, 6, 94, 95, 13, 58, 49, 36, 47, 48, 82, 5, 84, 17, 45, 60, 42, 87, 57, 15, 43, 14, 44, 67, 23, 56, 39, 55, 25, 61, 16, 91, 85, 93, 9, 51, 20, 30, 70, 28, 26, 12, 80, 68, 27, 89, 52, 38, 86, 100, 63, 90, 32, 10, 31, 88, 69, 1, 50, 18, 83, 8, 46, 19, 11, 29, 24, 54, 4, 65, 71, 35, 34, 78, 64, 66, 7, 62, 53, 40, 21, 73, 72, 2]
    # a = [ 13,  61,  94,  96,  99,  59,   6,  97,  38,  95, 100,  92,  87,  44,  43,  91,  14,  86,93 , 37,  16,  42 , 98,  85]
    # b = [[59, 61, 99, 93, [38, 91, 97, [42, 92, 95, 100, [96, 94, 16, 13, [14, 86, 37, 98, 44, [43, 87, 85, 6]]
    # a= [65,71,20,66,35]
    
    # a=[[[59, 86, 37, 13,44, 95, 43, 96,38, 99, 42, 93, 92,  14,  61,  16,  87,  97,  91, 100,85, 98, 94,  6,28, 29, 55, 67, 26,39, 12, 24, 80, 68,54,  4, 25,65, 51, 66,  3,30, 79, 34, 35, 50, 9, 20,  1, 69, 70,33, 76, 78, 71, 81, 77,62, 64, 19,  7, 48, 10,36, 47, 11, 88, 32,49, 90, 63, 31, 5, 84, 18, 45, 17, 82,52, 89, 8, 83, 27,46, 60,75, 53, 73, 15, 57,41, 58,40, 74, 22, 23,56, 21, 72,  2])]]
    # a= [[94, 86, 42, 92, 99],[95, 85, 14, 98, 97, 61,  6],[44, 16, 87, 59, 96, 37, 13],[43, 93],[ 38,  91, 100],[67, 80, 28],[39, 12, 29,  4, 54, 55],[25, 26],[24, 68],[30, 76,  3, 65],[34,  9, 77],[81, 33, 20, 78, 51],[35, 69],[50, 70],[66,  1],[71, 79],[63, 62, 31, 32,  7],[90, 47, 19, 11],[49, 10, 88],[64, 48],[36],[82, 60, 52],[46,  8,  5, 89, 27],[18, 45, 17, 84, 83],[57, 21, 75, 15, 58],[22, 41, 74, 72, 56],[23, 53, 73,  2, 40]]
    # test_route2 = [[2, 21, 73, 41, 56, 4], [5, 83, 61, 85, 37, 93], [14, 44, 38, 43, 13], [27, 69, 76, 79, 3, 54, 24, 80],[ 28, 12, 40, 53, 26], [30, 51, 9, 66, 1], [31, 88, 7, 10],[ 33, 29, 78, 34, 35, 77], [36, 47, 19, 8, 46, 17], [39, 23, 67, 55, 25], [45, 82, 18, 84, 60, 89],[ 52, 6], [59, 99, 94, 96], [62, 11, 90, 20, 32, 70], [63, 64, 49, 48], [65, 71, 81, 50, 68], [72, 75, 22, 74, 58], [92, 42, 15, 87, 57, 97], [95, 98, 16, 86, 91, 100]]
    # test_route = [2, 21, 73, 41, 56, 4,5, 83, 61, 85, 37, 93, 14, 44, 38, 43, 13, 27, 69, 76, 79, 3 ,54, 24, 80, 28 ,12, 40, 53, 26, 30, 51, 9, 66, 1,31, 88, 7 ,10, 33, 29, 78, 34, 35, 77, 36, 47, 19, 8 ,46, 17, 39, 23, 67, 55, 25, 45, 82, 18, 84, 60, 89,52, 6, 59, 99, 94, 96, 62, 11, 90, 20, 32 ,70, 63, 64, 49, 48, 65, 71, 81, 50, 68, 72, 75, 22, 74, 58, 92, 42, 15 ,87, 57, 97, 95 ,98 ,16, 86, 91, 100]
    a=[[ 92,   6,  96, 100],[38, 14, 37, 13],[44, 99, 16, 97, 93],[98, 95, 86, 43, 91, 87],[59, 42, 61, 94, 85],[28, 67, 55, 54, 25],[29, 68, 24, 80],[39, 12, 26,  4],[69, 35, 77],[33, 76,  9, 78, 34, 79],[65, 81,  3, 50,  1, 70],[30, 51, 71, 66, 20],[36, 11, 19,  7, 88, 10, 48],[63, 64, 49, 32],[47, 62, 90, 31],[ 5, 27, 84, 89],[45, 83, 82, 18,  8, 46, 60, 17],[52],[ 2, 23, 41, 22, 74, 56],[15, 75, 57, 53, 58],[72, 21, 73, 40]]
    a = [85, 61,87,44,57,18,84,8,46,38,94,86,99,53,6,16]   
    a = [ 2, 67, 68, 61, 85, 44, 59, 52, 45, 82, 83, 84, 89,16, 37,  6, 13, 14, 61, 85, 25, 26, 28, 29, 68, 80, 6, 13, 14, 16, 37, 32, 36, 53, 56, 57, 58, 72, 73, 74, 75,56, 42, 59, 83, 49, 13, 16, 37, 89, 47, 45, 14, 64, 90,  6,  13,  14,  16,  23,  41,   8,  17,  89,  59,  61,  85,  54,
       100,15, 21, 56, 57, 58, 36, 47, 13, 14,  5, 83, 84, 89, 78, 79, 81]    
    # print(sum(GA.cal_fitness_sub_route(a)))
    # # print(np.unique(np.a)).shape)
    # print(GA.cal_fitness_individual(a))
    # print(GA.cal_fitness_individualV2(a))
    # print(sum(GA.cal_fitness_sub_route(a)))

    # print(GA.individualToRoute(test))
    # print(GA.sort_cluster_by_distance(a))
    # print(len(b))

    intersect_gene = [81 ,78, 71, 70, 77, 79 ,80]
    diff_gene= [76,73]
    
    def greedySearch(intersect_gene, diff_gene):
            commom_part = np.copy(intersect_gene)
            # Thực hiện thuật toán tham lam
            # diff_gene: đoạn gen lắp vào
            # common_part: đoạn gen trả về
            for gen in diff_gene:

                parts = [GA.cal_fitness_individualV2(np.insert(commom_part, idx, gen))[0] for idx in range(len(commom_part)+1)]
                idx_cus_min = np.argmin(parts)

                # Chèn khách hàng 
                commom_part = np.insert(commom_part, idx_cus_min, gen)
            return commom_part
    
    test = [ 81 ,78, 76, 71, 70, 73, 77, 79 ,80]
    out = greedySearch(intersect_gene,diff_gene)
    # print(test,GA.cal_fitness_individualV2(test))
    # print(out,GA.cal_fitness_individualV2(out))
    a= [19, 96, 40, 50, 69, 17, 65, 7, 93, 44, 46, 8, 33, 36, 81, 30, 10, 48, 47, 51, 27, 3, 1, 18, 57, 22, 87, 75, 14, 5, 73, 15, 74, 21, 52, 28, 84, 86, 60, 91, 12, 76, 55, 89, 31, 61, 85, 94, 92, 58, 63, 64, 98, 23, 53, 24, 25, 82, 78, 71, 39, 59, 6, 29, 77, 2, 79, 37, 100, 97, 9, 88, 80, 26, 83, 11, 45, 32, 38, 95, 20, 70, 99, 72, 68, 90, 62, 41, 49, 54, 16, 4]
    print(GA.individualToRoute(a))